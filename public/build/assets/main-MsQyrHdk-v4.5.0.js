import{E as g}from"./Errors-C30A2Jtx-v4.5.0.js";import"./CartItem-HYQyFSGT-v4.5.0.js";Alpine.data("Checkout",({customerEmail:h,customerPhone:d,addresses:l,defaultAddress:p,gateways:m,countries:c})=>({addresses:l,defaultAddress:p,gateways:m,countries:c,form:{customer_email:h,customer_phone:d,billing:{},shipping:{},billingAddressId:null,shippingAddressId:null,newBillingAddress:!1,newShippingAddress:!1,ship_to_a_different_address:!1},states:{billing:{},shipping:{}},controller:null,loadingOrderSummary:!1,shippingMethodName:null,applyingCoupon:!1,couponCode:null,couponError:null,placingOrder:!1,stripe:null,stripeElements:null,authorizeNetToken:null,payFastFormFields:{},errors:new g,get cart(){return this.$store.state.cart},get cartIsEmpty(){return this.$store.state.cartIsEmpty},get hasAddress(){return Object.keys(this.addresses).length!==0},get firstCountry(){return Object.keys(this.countries)[0]},get hasBillingStates(){return Object.keys(this.states.billing).length!==0},get hasShippingStates(){return Object.keys(this.states.shipping).length!==0},get hasNoPaymentMethod(){return Object.keys(this.gateways).length===0},get firstPaymentMethod(){return Object.keys(this.gateways)[0]},get shouldShowPaymentInstructions(){return["bank_transfer","check_payment"].includes(this.form.payment_method)},get paymentInstructions(){if(this.shouldShowPaymentInstructions)return this.gateways[this.form.payment_method].instructions},get hasShippingMethod(){return Object.keys(this.cart.availableShippingMethods).length!==0},get hasFreeShipping(){var e;return((e=this.cart.coupon)==null?void 0:e.free_shipping)??!1},get firstShippingMethod(){return Object.keys(this.cart.availableShippingMethods)[0]},init(){this.$watch("form.billing.city",e=>{e&&this.addTaxes()}),this.$watch("form.shipping.city",e=>{e&&this.addTaxes()}),this.$watch("form.billing.zip",e=>{e&&this.addTaxes()}),this.$watch("form.shipping.zip",e=>{e&&this.addTaxes()}),this.$watch("form.billing.state",e=>{e&&this.addTaxes()}),this.$watch("form.shipping.state",e=>{e&&this.addTaxes()}),this.$watch("form.ship_to_a_different_address",e=>{e&&this.form.shippingAddressId?this.form.shipping=this.addresses[this.form.shippingAddressId]:(this.form.shipping={},this.resetAddressErrors("shipping")),this.addTaxes()}),this.$watch("form.terms_and_conditions",()=>{this.errors.clear("terms_and_conditions")}),this.$watch("form.payment_method",e=>{e==="paypal"&&this.$nextTick(this.renderPayPalButton())}),this.defaultAddress.address_id&&(this.form.billingAddressId=this.defaultAddress.address_id,this.form.shippingAddressId=this.defaultAddress.address_id,this.mergeSavedBillingAddress(),this.mergeSavedShippingAddress()),this.hasAddress||(this.form.newBillingAddress=!0,this.form.newShippingAddress=!0),this.$nextTick(()=>{this.changePaymentMethod(this.firstPaymentMethod),this.cart.shippingMethodName?this.changeShippingMethod(this.cart.shippingMethodName):this.updateShippingMethod(this.firstShippingMethod),FleetCart.stripeEnabled&&FleetCart.stripeIntegrationType==="embedded_form"&&this.renderStripeElements()})},changeBillingAddress(e){this.form.newBillingAddress||this.form.billingAddressId===e.id||(this.form.billingAddressId=e.id,this.mergeSavedBillingAddress())},addNewBillingAddress(){this.resetAddressErrors("billing"),this.form.billing={},this.form.newBillingAddress=!this.form.newBillingAddress,this.form.newBillingAddress||this.mergeSavedBillingAddress()},changeShippingAddress(e){this.form.newShippingAddress||this.form.shippingAddressId===e.id||(this.form.shippingAddressId=e.id,this.mergeSavedShippingAddress())},addNewShippingAddress(){this.resetAddressErrors("shipping"),this.form.shipping={},this.form.newShippingAddress=!this.form.newShippingAddress,this.form.newShippingAddress||this.mergeSavedShippingAddress()},resetAddressErrors(e){Object.keys(this.errors.errors).map(t=>{t.indexOf(e)!==-1&&this.errors.clear(t)})},mergeSavedBillingAddress(){this.resetAddressErrors("billing"),!this.form.newBillingAddress&&this.form.billingAddressId&&(this.form.billing=this.addresses[this.form.billingAddressId])},mergeSavedShippingAddress(){this.resetAddressErrors("shipping"),this.form.ship_to_a_different_address&&!this.form.newShippingAddress&&this.form.shippingAddressId&&(this.form.shipping=this.addresses[this.form.shippingAddressId])},changeBillingCity(e){this.form.billing.city=e},changeShippingCity(e){this.form.shipping.city=e},changeBillingZip(e){this.form.billing.zip=e},changeShippingZip(e){this.form.shipping.zip=e},changeBillingCountry(e){if(this.form.billing.country=e,e===""){this.form.billing.state="",this.states.billing={};return}this.fetchStates(e,t=>{this.states.billing=t.data,this.form.billing.state=""})},changeShippingCountry(e){if(this.form.shipping.country=e,e===""){this.form.shipping.state="",this.states.shipping={};return}this.fetchStates(e,t=>{this.states.shipping=t.data,this.form.shipping.state=""})},fetchStates(e,t){axios.get(route("countries.states.index",{code:e})).then(t)},changeBillingState(e){this.form.billing.state=e},changeShippingState(e){this.form.shipping.state=e},changePaymentMethod(e){this.form.payment_method=e},changeShippingMethod(e){this.form.shipping_method=e},async updateShippingMethod(e){if(e){this.loadingOrderSummary=!0,this.changeShippingMethod(e);try{const t=await axios.post(route("cart.shipping_method.store"),{shipping_method:e});this.$store.state.updateCart(t.data)}catch(t){notify(t.response.data.message)}finally{this.loadingOrderSummary=!1}}},async addTaxes(){this.loadingOrderSummary=!0;try{const e=await axios.post(route("cart.taxes.store"),this.form);this.$store.state.updateCart(e.data)}catch(e){notify(e.response.data.message)}finally{this.loadingOrderSummary=!1}},applyCoupon(){this.couponCode&&(this.loadingOrderSummary=!0,this.applyingCoupon=!0,axios.post(route("cart.coupon.store"),{coupon:this.couponCode}).then(e=>{this.couponCode=null,this.couponError=null,this.$store.state.updateCart(e.data)}).catch(e=>{this.couponError=e.response.data.message}).finally(()=>{this.loadingOrderSummary=!1,this.applyingCoupon=!1}))},removeCoupon(){this.loadingOrderSummary=!0,axios.delete(route("cart.coupon.destroy")).then(e=>{this.$store.state.updateCart(e.data)}).catch(e=>{notify(e.response.data.message)}).finally(()=>{this.loadingOrderSummary=!1})},placeOrder(){!this.form.terms_and_conditions||this.placingOrder||(this.placingOrder=!0,axios.post(route("checkout.store"),{...this.form,ship_to_a_different_address:+this.form.ship_to_a_different_address}).then(({data:e})=>{e.redirectUrl?window.location.href=e.redirectUrl:this.form.payment_method==="stripe"?this.confirmStripePayment(e):this.form.payment_method==="paytm"?this.confirmPaytmPayment(e):this.form.payment_method==="razorpay"?this.confirmRazorpayPayment(e):this.form.payment_method==="paystack"?this.confirmPaystackPayment(e):this.form.payment_method==="authorizenet"?this.confirmAuthorizeNetPayment(e):this.form.payment_method==="flutterwave"?this.confirmFlutterWavePayment(e):this.form.payment_method==="mercadopago"?this.confirmMercadoPagoPayment(e):this.form.payment_method==="payfast"?this.confirmPayFastPayment(e):this.confirmOrder(e.orderId,this.form.payment_method)}).catch(({response:e})=>{this.placingOrder=!1,e.status===422&&this.errors.record(e.data.errors),notify(e.data.message)}))},confirmOrder(e,t,s={}){axios.get(route("checkout.complete.store",{orderId:e,paymentMethod:t,...s})).then(()=>{window.location.href=route("checkout.complete.show")}).catch(r=>{this.placingOrder=!1,this.loadingOrderSummary=!1,this.deleteOrder(e),notify(r.response.data.message)})},async deleteOrder(e){if(!e)return;const t=await axios.get(route("checkout.payment_canceled.store",{orderId:e}));notify(t.data.message)},renderPayPalButton(){let e=this,t;window.paypal.Buttons({async createOrder(){try{return t=await axios.post(route("checkout.create"),e.form),t.data.resourceId}catch({response:s}){if(s.status===422){e.errors.record(s.data.errors);return}notify(s.data.message)}},onApprove(){e.loadingOrderSummary=!0,e.confirmOrder(t.data.orderId,"paypal",t.data)},onError(){e.deleteOrder(t.data.orderId)},onCancel(){e.deleteOrder(t.data.orderId)}}).render("#paypal-button-container")},async renderStripeElements(){this.stripe=Stripe(FleetCart.stripePublishableKey,{}),this.stripeElements=this.stripe.elements({mode:"payment",amount:parseInt(this.$store.state.cartTotalAmount*100),currency:FleetCart.currency.toLowerCase()}),this.stripeElements.create("payment").mount("#stripe-element")},async confirmStripePayment({client_secret:e,orderId:t,return_url:s}){const r=this.stripeElements,{error:i}=await this.stripeElements.submit();if(i){this.placingOrder=!1,this.deleteOrder(t),notify(i.message);return}const{error:n}=await this.stripe.confirmPayment({elements:r,clientSecret:e,confirmParams:{return_url:s}});n&&(this.placingOrder=!1,this.deleteOrder(t),notify(n.message))},confirmPaytmPayment({orderId:e,amount:t,txnToken:s}){let r={root:"",flow:"DEFAULT",data:{orderId:e,token:s,tokenType:"TXN_TOKEN",amount:t},merchant:{name:FleetCart.storeName,redirect:!1},handler:{transactionStatus:i=>{i.STATUS==="TXN_SUCCESS"?this.confirmOrder(e,"paytm",i):i.STATUS==="TXN_FAILURE"&&(this.placingOrder=!1,this.deleteOrder(e)),window.Paytm.CheckoutJS.close()},notifyMerchant:i=>{i==="APP_CLOSED"&&(this.placingOrder=!1,this.deleteOrder(e))}}};window.Paytm.CheckoutJS.init(r).then(()=>{window.Paytm.CheckoutJS.invoke()}).catch(()=>{this.deleteOrder(e)})},confirmRazorpayPayment(e){this.placingOrder=!1;let t=this;new window.Razorpay({key:e.razorpayKeyId,name:FleetCart.storeName,description:trans("storefront::checkout.payment_for_order",{id:e.receipt}),image:FleetCart.storeLogo,order_id:e.id,handler(s){t.placingOrder=!0,t.confirmOrder(e.receipt,"razorpay",s)},modal:{ondismiss(){t.deleteOrder(e.receipt)}},prefill:{name:`${t.form.billing.first_name} ${t.form.billing.last_name}`,email:t.form.customer_email,contact:t.form.customer_phone}}).open()},confirmPaystackPayment({key:e,email:t,amount:s,ref:r,currency:i,order_id:n}){let a=this;PaystackPop.setup({key:e,email:t,amount:s,ref:r,currency:i,onClose(){a.placingOrder=!1,a.deleteOrder(n)},callback(o){a.placingOrder=!1,a.confirmOrder(n,"paystack",o)},onBankTransferConfirmationPending(o){a.placingOrder=!1,a.confirmOrder(n,"paystack",o)}}).openIframe()},confirmAuthorizeNetPayment({token:e}){this.authorizeNetToken=e,this.$nextTick(()=>{this.$refs.authorizeNetForm.submit(),this.authorizeNetToken=null})},confirmFlutterWavePayment({public_key:e,tx_ref:t,order_id:s,amount:r,currency:i,payment_options:n,redirect_url:a}){let o=this;FlutterwaveCheckout({public_key:e,tx_ref:t,amount:r,currency:i,payment_options:n.join(", "),redirect_url:a,customer:{email:this.form.customer_email,phone_number:this.form.customer_phone,name:this.form.billing.full_name},customizations:{title:FleetCart.storeName,logo:FleetCart.storeLogo},onclose(f){o.placingOrder=!1,f&&o.deleteOrder(s)}})},confirmMercadoPagoPayment(e){this.placingOrder=!1;const t={en_US:"en-US",es_AR:"es-AR",es_CL:"es-CL",es_CO:"es-CO",es_MX:"es-MX",es_VE:"es-VE",es_UY:"es-UY",es_PE:"es-PE",pt_BR:"pt-BR"};new MercadoPago(e.publicKey,{locale:t[e.currentLocale]||"en-US"}).checkout({preference:{id:e.preferenceId},autoOpen:!0})},confirmPayFastPayment(e){this.payFastFormFields=e.formFields,this.$nextTick(()=>{this.$refs.payFastForm.submit()})}}));
